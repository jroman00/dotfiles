#!/usr/bin/env bash

# Add `~/bin` to the `$PATH`
export PATH="$HOME/bin:$PATH";

# Add `$GOPATH/bin` to `$PATH`
export PATH="$PATH:$GOPATH/bin";

# Add `$SCALA_HOME/bin` to `$PATH`
export PATH="$PATH:$SCALA_HOME/bin";

# Add composer bin to `$PATH`
export PATH="$PATH:$HOME/.composer/vendor/bin";

# Add PHP 7.1 bin to `$PATH`
export PATH="/usr/local/opt/php@7.1/bin:$PATH"

# Add Postgres bin to `$PATH`
export PATH="$PATH:/Applications/Postgres.app/Contents/Versions/latest/bin";

# Add sbin to the `$PATH`
export PATH="/usr/local/sbin:$PATH";

# Add Node 10 bin to `$PATH`
export PATH="/usr/local/opt/node@10/bin:$PATH";

# Prefer python from Brew over pre-installed version with MacOS
export PATH=/usr/local/opt/python/libexec/bin:$PATH

# The next line updates PATH for the Google Cloud SDK.
if [ -f "${HOME}/.rvm/scripts/rvm" ]; then
  source "${HOME}/.rvm/scripts/rvm";
fi

# The next line updates PATH for the Google Cloud SDK.
if [ -f "${HOME}/google-cloud-sdk/path.bash.inc" ]; then
  source "${HOME}/google-cloud-sdk/path.bash.inc";
fi

# The next line enables shell command completion for gcloud.
if [ -f "${HOME}/google-cloud-sdk/completion.bash.inc" ]; then
  source "${HOME}/google-cloud-sdk/completion.bash.inc";
fi

# Add tab completion for many Bash commands
if which brew &> /dev/null && [ -f "$(brew --prefix)/share/bash-completion/bash_completion" ]; then
	source "$(brew --prefix)/share/bash-completion/bash_completion";
elif [ -f /etc/bash_completion ]; then
	source /etc/bash_completion;
fi;

if [ -f /opt/homebrew/bin/brew ]; then
  eval "$(/opt/homebrew/bin/brew shellenv)"
elif [ -f /usr/local/bin/brew ]; then
  eval "$(/usr/local/bin/brew shellenv)"
fi;

# NVM
export NVM_DIR="$HOME/.nvm"
[ -s "/opt/homebrew/opt/nvm/nvm.sh" ] && \. "/opt/homebrew/opt/nvm/nvm.sh"  # This loads nvm
[ -s "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm" ] && \. "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm"  # This loads nvm bash_completion

# Justworks dev tool
if [ -f "/opt/dev/dev.sh" ]; then
  source /opt/dev/dev.sh
fi

# Load ASDF if available
if [ -f "$HOME/.asdf/asdf.sh" ]; then
  source "$HOME/.asdf/asdf.sh"
fi
